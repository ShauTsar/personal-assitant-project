apiVersion: batch/v1
kind: Job
metadata:
  name: personal-assistant-init-db
spec:
  template:
    spec:
      containers:
        - name: init-db
          image: personal-assistant-postgres:latest
          command: ["/bin/sh", "-c", "psql -h postgres -U postgres -d novaDB -f /sql/init.sql"]
          volumeMounts:
            - name: sql-scripts
              mountPath: /sql
      restartPolicy: OnFailure
      volumes:
        - name: sql-scripts
          configMap:
            name: db-init-scripts
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-init-scripts
data:
  init.sql: |
    CREATE TABLE users (
      id         SERIAL PRIMARY KEY,
      username   VARCHAR(255) NOT NULL,
      password   VARCHAR(255) NOT NULL,
      email      VARCHAR(255) NOT NULL,
      timezone   VARCHAR(255), --NOT NULL,
      avatar_url VARCHAR(255),
      phone      VARCHAR(255)
    );
    
    CREATE TABLE tasks (
      id            SERIAL PRIMARY KEY,
      user_id       INT REFERENCES users(id),
      start_date    TIMESTAMP,
      planned_date  TIMESTAMP,
      finished_date TIMESTAMP,
      description   VARCHAR(550),
      is_finished   BOOLEAN DEFAULT false
    );
    
    CREATE TABLE tbot (
      id                  SERIAL PRIMARY KEY,
      user_id             INT REFERENCES users(id),
      tg_user_id          INT,
      task_id             INT REFERENCES tasks(id),
      notification_enabled BOOLEAN DEFAULT true,
      notification_time   TIME,
      last_notified_at    TIMESTAMP,
      CONSTRAINT tg_user_unique UNIQUE (tg_user_id)
    );
    
    --TODO не забыть использовать это в коде
    ALTER TABLE tasks ADD COLUMN attachment VARCHAR(255);
    ALTER TABLE tasks ADD COLUMN title VARCHAR(255);
    
    CREATE TABLE users_notification_settings (
      id           SERIAL PRIMARY KEY,
      user_id      INT REFERENCES users(id),
      for_morning  INT,
      for_evening  INT,
      for_task     INT,
      is_dark_theme BOOLEAN
    );
    
    CREATE TABLE finances (
      id           SERIAL PRIMARY KEY,
      category_id  INT REFERENCES finances_categories(id),
      fin_date     DATE,
      description  VARCHAR(550),
      price        VARCHAR(250),
      is_expense   BOOLEAN DEFAULT true,
      user_id      INT REFERENCES users(id)
    );
    
    CREATE TABLE finances_categories (
      id               SERIAL PRIMARY KEY,
      name             VARCHAR(255),
      is_for_all_users BOOLEAN DEFAULT false,
      user_id          INT REFERENCES users(id)
    );
    
    INSERT INTO finances_categories (name, is_for_all_users) VALUES
    ('Подписки', true),
    ('Фитнес', true),
    ('Продукты', true),
    ('Рестораны', true),
    ('Транспорт', true),
    ('Автомобиль', true),
    ('Подарки', true),
    ('Развлечения', true),
    ('Одежда', true),
    ('Обувь', true),
    ('Путешествия', true);
    
    ALTER TABLE finances ADD COLUMN user_id INT REFERENCES users(id);
    ALTER TABLE finances_categories ADD COLUMN user_id INT REFERENCES users(id);
    
    CREATE TABLE archived_tasks (
      id            SERIAL PRIMARY KEY,
      user_id       INT REFERENCES users(id),
      start_date    TIMESTAMP,
      planned_date  TIMESTAMP,
      finished_date TIMESTAMP,
      description   VARCHAR(550),
      is_finished   BOOLEAN DEFAULT false,
      archived_date TIMESTAMP
    );
    
    ALTER TABLE archived_tasks ADD COLUMN attachment VARCHAR(255);
    ALTER TABLE archived_tasks ADD COLUMN title VARCHAR(255);
    -- и другие таблицы
